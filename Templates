import plotly.graph_objects as go
from IPython.display import display
from plotly.subplots import make_subplots

# Unique values for dropdown
orgntd_values = ach_segment['orgntd_trans_ind'].unique()
tran_values = ach_segment['tran_direction'].unique()

# Create figure
fig = make_subplots(rows=1, cols=1)

# Add traces, one for each slider step
for orgntd_trans_ind in orgntd_values:
    for tran_direction in tran_values:
        df_filtered = ach_segment[(ach_segment['orgntd_trans_ind'] == orgntd_trans_ind) & (ach_segment['tran_direction'] == tran_direction)]
        df_filtered = df_filtered.sort_values('total_tran_count', ascending=False)
        
        fig.add_trace(
            go.Table(
                header=dict(values=list(df_filtered.columns),
                            fill_color='paleturquoise',
                            align='left'),
                cells=dict(values=[df_filtered[column] for column in df_filtered.columns],
                           fill_color='lavender',
                           align='left')),
            row=1, col=1)

# Make dataframes visible by default and create dropdowns
fig.data[0].visible = True

steps = []
for i in range(len(fig.data)):
    step = dict(
        method="update",
        args=[{"visible": [False] * len(fig.data)},
              {"title": "Slider switched to step: " + str(i)}],  # layout attribute
    )
    step["args"][0]["visible"][i] = True  # Toggle i'th trace to "visible"
    steps.append(step)

sliders = [dict(
    active=0,
    currentvalue={"prefix": "Currently Displaying: "},
    pad={"t": 50},
    steps=steps
)]

fig.update_layout(
    sliders=sliders
)

fig.show()

