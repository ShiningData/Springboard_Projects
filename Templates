from sklearn.metrics import mean_absolute_error, mean_squared_error
import numpy as np
import pandas as pd

model_names = ['Model1', 'Model2', 'Model3', 'Model4', 'Model5', 'Model6']
predictions = [pred1, pred2, pred3, pred4, pred5, pred6]  # these are your model predictions
y_true = [... ]  # these are the actual values

from sklearn.metrics import mean_absolute_error, mean_squared_error
import numpy as np
import pandas as pd

def calculate_mape(y_true, y_pred):
    return np.mean(np.abs((y_true - y_pred) / y_true)) * 100

def calculate_smape(y_true, y_pred):
    return 2.0 * np.mean(np.abs(y_true - y_pred) / (np.abs(y_true) + np.abs(y_pred))) * 100

def calculate_rmse(y_true, y_pred):
    return np.sqrt(mean_squared_error(y_true, y_pred))

def calculate_mae(y_true, y_pred):
    return mean_absolute_error(y_true, y_pred)

# Calculate metrics for each model and store them in a list
results = []
for i in range(len(model_names)):
    mape = calculate_mape(y_true, predictions[i])
    smape = calculate_smape(y_true, predictions[i])
    rmse = calculate_rmse(y_true, predictions[i])
    mae = calculate_mae(y_true, predictions[i])
    results.append({'Model': model_names[i], 'MAPE': mape, 'sMAPE': smape, 'RMSE': rmse, 'MAE': mae})

# Convert the results to a pandas DataFrame
df_results = pd.DataFrame(results)








