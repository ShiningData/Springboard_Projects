import pandas as pd

# Sample DataFrame
data = {
    'acc_id': [1, 1, 2, 2, 3],
    'cust_pwr_id': [101, 101, 102, 102, 103],
    'cust_name': ['Customer A', 'Customer A', 'Customer B', 'Customer B', 'Customer C'],
    'year_dt': [2023, 2023, 2023, 2023, 2023],
    'segment': ['Segment 1', 'Segment 1', 'Segment 2', 'Segment 2', 'Segment 3'],
    'naics': ['111111', '*******', '222222', '333333', '*******'],
    'tran_direction': ['In', 'Out', 'In', 'Out', 'In'],
    'tran_num': [100, 50, 75, 25, 200]
}

df = pd.DataFrame(data)

# Function to fix NAICS codes
def fix_naics(df):
    # Group by cust_pwr_id and count unique NAICS codes
    naics_counts = df.groupby('cust_pwr_id')['naics'].nunique()
    
    # Filter cust_pwr_id with exactly 2 unique NAICS codes (excluding "*******")
    valid_cust_pwr_ids = naics_counts[naics_counts == 2].index.tolist()
    
    # Iterate over valid cust_pwr_ids and replace "*******" with the other valid NAICS code
    for cust_pwr_id in valid_cust_pwr_ids:
        naics_values = df.loc[df['cust_pwr_id'] == cust_pwr_id, 'naics'].unique()
        if '*******' in naics_values:
            valid_naics = [naics for naics in naics_values if naics != '*******'][0]
            df.loc[(df['cust_pwr_id'] == cust_pwr_id) & (df['naics'] == '*******'), 'naics'] = valid_naics
    
    return df

# Call the function to fix the NAICS codes
fixed_df = fix_naics(df)

print(fixed_df)
