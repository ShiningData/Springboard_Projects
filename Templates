import matplotlib.pyplot as plt
import pandas as pd

# Assuming the data is already in `claim_df` with 'year_month' and 'claimTotalChargeAmt'

# Filter the data for the specific month
specific_month_data = claim_df[claim_df['year_month'] == '2022-01']

# Sort the claim amounts in descending order
sorted_data = specific_month_data.sort_values(by='claimTotalChargeAmt', ascending=False)

# Calculate the cumulative sum and cumulative percentage
sorted_data['cumulative_sum'] = sorted_data['claimTotalChargeAmt'].cumsum()
sorted_data['cumulative_perc'] = 100 * sorted_data['cumulative_sum'] / sorted_data['claimTotalChargeAmt'].sum()

# Plotting the Pareto chart (Cumulative Percentage Line only)
fig, ax1 = plt.subplots(figsize=(14, 8))

# Plot the claim amounts on the left y-axis
ax1.bar(sorted_data.index, sorted_data['claimTotalChargeAmt'], color='b')
ax1.set_xlabel('Claims Ordered by Amount (Descending)')
ax1.set_ylabel('Claim Amount', color='b')
ax1.tick_params(axis='y', labelcolor='b')

# Create a second y-axis for the cumulative percentage
ax2 = ax1.twinx()
ax2.plot(sorted_data.index, sorted_data['cumulative_perc'], color='r', marker='o', linestyle='-')
ax2.set_ylabel('Cumulative Percentage (%)', color='r')
ax2.tick_params(axis='y', labelcolor='r')
ax2.set_ylim([0, 110])  # Extend the y-axis slightly beyond 100% for better visualization

# Adding title
plt.title('Pareto Analysis - Cumulative Percentage of Claim Amounts for January 2022')

# Show the plot
plt.show()
