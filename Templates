WITH yesterday_data AS (
    SELECT segment, tran_direction, date_dt,
           COUNT(DISTINCT unique_transaction_id) AS total_tran_count,
           SUM(tran_amt) AS total_tran_amt,
           COUNT(DISTINCT CASE WHEN tran_direction = 'incoming' THEN cdtr_acct_id ELSE dbtr_acct_id END) AS num_active_clients
    FROM your_table_name
    WHERE date_dt = CURRENT_DATE - INTERVAL 1 DAY
    GROUP BY segment, tran_direction, date_dt
),
before_yesterday_data AS (
    SELECT segment, tran_direction, date_dt,
           COUNT(DISTINCT unique_transaction_id) AS total_tran_count,
           SUM(tran_amt) AS total_tran_amt,
           COUNT(DISTINCT CASE WHEN tran_direction = 'incoming' THEN cdtr_acct_id ELSE dbtr_acct_id END) AS num_active_clients
    FROM your_table_name
    WHERE date_dt = CURRENT_DATE - INTERVAL 2 DAY
    GROUP BY segment, tran_direction, date_dt
)
SELECT y.segment, y.tran_direction,
       y.total_tran_count, 
       CASE WHEN by.total_tran_count > 0 THEN (y.total_tran_count - by.total_tran_count) / by.total_tran_count * 100 ELSE NULL END AS percent_change_count,
       y.total_tran_amt, 
       CASE WHEN by.total_tran_amt > 0 THEN (y.total_tran_amt - by.total_tran_amt) / by.total_tran_amt * 100 ELSE NULL END AS percent_change_amt,
       y.num_active_clients,
       CASE WHEN by.num_active_clients > 0 THEN (y.num_active_clients - by.num_active_clients) / by.num_active_clients * 100 ELSE NULL END AS percent_change_client
FROM yesterday_data y
LEFT JOIN before_yesterday_data by
    ON y.segment = by.segment
    AND y.tran_direction = by.tran_direction
    AND y.date_dt = by.date_dt;
