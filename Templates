# Extract unique TRAN_CDs from the consolidation groups
unique_tran_cds = sorted(set(tran_cd for group in results_df['Consolidation Group'] for tran_cd in group))

# Initialize a similarity matrix with NaN
similarity_matrix = np.full((len(unique_tran_cds), len(unique_tran_cds)), np.nan)

# Create a dictionary to map TRAN_CDs to their indices
tran_cd_index = {tran_cd: idx for idx, tran_cd in enumerate(unique_tran_cds)}

# Populate the similarity matrix using the average cosine similarities
for _, row in results_df.iterrows():
    group = row['Consolidation Group']
    avg_similarity = row['Average Cosine Similarity']
    for tran_cd1 in group:
        for tran_cd2 in group:
            if tran_cd1 != tran_cd2:
                idx1 = tran_cd_index[tran_cd1]
                idx2 = tran_cd_index[tran_cd2]
                similarity_matrix[idx1, idx2] = avg_similarity
                similarity_matrix[idx2, idx1] = avg_similarity  # Ensure symmetry

# Convert the matrix to a DataFrame for the heatmap
similarity_df = pd.DataFrame(similarity_matrix, index=unique_tran_cds, columns=unique_tran_cds)

# Plot the heatmap
plt.figure(figsize=(12, 8))
sns.heatmap(similarity_df, xticklabels=True, yticklabels=True, cmap='coolwarm', annot=True, linewidths=.5)
plt.title('Heatmap of Average Cosine Similarity Between Consolidated Transaction Codes')
plt.xlabel('Transaction Code')
plt.ylabel('Transaction Code')
plt.show()
```

### Explanation:
1. **Extract Unique Transaction Codes**: Identify all unique `TRAN_CD`s from the consolidation groups in `results_df`.
2. **Initialize Similarity Matrix**: Create a matrix initialized with NaN values to hold the similarity values.
3. **Map Transaction Codes to Indices**: Create a mapping of `TRAN_CD`s to their respective indices in the matrix.
4. **Populate Similarity Matrix**: Fill the matrix with average cosine similarities from the consolidation groups. Ensure the matrix is symmetric.
5. **Create DataFrame for Heatmap**: Convert the similarity matrix into a DataFrame for easier plotting.
6. **Plot the Heatmap**: Use seaborn to create and display a heatmap of the similarities.

This approach should correctly visualize the relationships between transaction codes as described in `results_df`.
