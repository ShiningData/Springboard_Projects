import dash
from dash import dcc, html, Input, Output, State
import pandas as pd
import urllib.parse

app = dash.Dash(__name__)

# Sample data for tables
data_splash_table1 = pd.DataFrame({'Column1': [1, 2, 3], 'Column2': ['A', 'B', 'C']})
data_splash_table2 = pd.DataFrame({'Column3': [4, 5, 6], 'Column4': ['X', 'Y', 'Z']})

app.layout = html.Div([
    # Splash Page
    html.Div([
        dcc.Dropdown(id='splash-filter1', options=[{'label': 'Option 1', 'value': 'option1'},
                                                   {'label': 'Option 2', 'value': 'option2'}]),
        dcc.Dropdown(id='splash-filter2', options=[{'label': 'Option A', 'value': 'optionA'},
                                                   {'label': 'Option B', 'value': 'optionB'}]),
        dcc.Dropdown(id='splash-filter3', options=[{'label': 'Market 1', 'value': 'market1'},
                                                   {'label': 'Market 2', 'value': 'market2'}]),
        html.Button('Export Total Data Filtered Summary', id='export-splash-table1'),
        dcc.Table(id='splash-table1'),
        html.Button('Export Transaction with All Banks', id='export-splash-table2'),
        dcc.Table(id='splash-table2'),
    ], id='splash-page'),
])

# Callbacks to trigger CSV downloads for Splash Page
@app.callback(
    Output('export-splash-table1', 'n_clicks'),
    Output('export-splash-table2', 'n_clicks'),
    Input('export-splash-table1', 'n_clicks'),
    Input('export-splash-table2', 'n_clicks'),
    prevent_initial_call=True
)
def export_table(n1, n2):
    ctx = dash.callback_context
    if not ctx.triggered:
        return [0, 0]

    # Get the ID of the button that triggered the callback
    button_id = ctx.triggered[0]['prop_id'].split('.')[0]

    if button_id == 'export-splash-table1':
        data = data_splash_table1
    elif button_id == 'export-splash-table2':
        data = data_splash_table2

    # Convert the DataFrame to a CSV string
    csv_string = data.to_csv(index=False, encoding='utf-8', sep=',')

    # Create a download link
    csv_data = "data:text/csv;charset=utf-8," + urllib.parse.quote(csv_string)

    return [0, 0]

if __name__ == '__main__':
    app.run_server(debug=True)
