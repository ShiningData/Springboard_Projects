Conduct sensitivity analysis for the interest rate changes on deposit balance using Fuzzy Logic Modeling in python as stated below:
Fuzzy Logic Modeling:
Employ fuzzy logic modeling to capture the imprecise and uncertain nature of the relationship between interest rate changes and deposit balances.
Define fuzzy rules and membership functions to represent the sensitivity of deposit balances to different levels of interest rate changes.
The scikit-fuzzy package in Python offers tools for fuzzy logic modeling.

To conduct sensitivity analysis for the impact of interest rate changes on deposit balance using Fuzzy Logic Modeling in Python, you can utilize the `scikit-fuzzy` package. Here's a general approach to perform this analysis:

1. **Install Required Libraries**: If you haven't already installed `scikit-fuzzy`, you can do so via pip:

```bash
pip install scikit-fuzzy
```

2. **Define Membership Functions**: Define membership functions for both the interest rate changes and the deposit balances. These functions will represent the fuzzy sets that characterize the sensitivity of deposit balances to different levels of interest rate changes.

3. **Define Fuzzy Rules**: Define a set of fuzzy rules that encode the relationship between interest rate changes and deposit balances. These rules will guide the fuzzy inference process.

4. **Perform Fuzzy Inference**: Use the defined membership functions and fuzzy rules to perform fuzzy inference, which will determine the degree to which each rule applies given the current state of the system.

5. **Analyze Sensitivity**: Analyze the results of the fuzzy inference to understand the sensitivity of deposit balances to different levels of interest rate changes.

Here's a simplified example of how you can conduct sensitivity analysis using Fuzzy Logic Modeling in Python with the `scikit-fuzzy` package:

```python
import numpy as np
import skfuzzy as fuzz
from skfuzzy import control as ctrl

# Define input variables (interest rate changes) and output variable (deposit balance)
interest_rate_changes = ctrl.Antecedent(np.arange(-0.1, 0.1, 0.01), 'interest_rate_changes')
deposit_balance = ctrl.Consequent(np.arange(0, 5000, 1), 'deposit_balance')

# Define membership functions for input and output variables
interest_rate_changes['low'] = fuzz.trimf(interest_rate_changes.universe, [-0.1, -0.05, 0])
interest_rate_changes['medium'] = fuzz.trimf(interest_rate_changes.universe, [-0.05, 0, 0.05])
interest_rate_changes['high'] = fuzz.trimf(interest_rate_changes.universe, [0, 0.05, 0.1])

deposit_balance['low'] = fuzz.trimf(deposit_balance.universe, [0, 1000, 2000])
deposit_balance['medium'] = fuzz.trimf(deposit_balance.universe, [1000, 2000, 3000])
deposit_balance['high'] = fuzz.trimf(deposit_balance.universe, [2000, 3000, 5000])

# Define fuzzy rules
rule1 = ctrl.Rule(interest_rate_changes['low'], deposit_balance['low'])
rule2 = ctrl.Rule(interest_rate_changes['medium'], deposit_balance['medium'])
rule3 = ctrl.Rule(interest_rate_changes['high'], deposit_balance['high'])

# Create fuzzy control system
deposit_balance_ctrl = ctrl.ControlSystem([rule1, rule2, rule3])
deposit_balance_sim = ctrl.ControlSystemSimulation(deposit_balance_ctrl)

# Set interest rate changes value and compute deposit balance
interest_rate_change_value = 0.03  # Example interest rate change value
deposit_balance_sim.input['interest_rate_changes'] = interest_rate_change_value
deposit_balance_sim.compute()

# Analyze sensitivity
print("Deposit Balance for Interest Rate Change of", interest_rate_change_value, ":",
      deposit_balance_sim.output['deposit_balance'])
```

In this example:
- We define input (interest rate changes) and output (deposit balance) variables with corresponding membership functions.
- We define fuzzy rules that specify the relationship between interest rate changes and deposit balances.
- We create a fuzzy control system and perform a simulation to compute the deposit balance for a given interest rate change value.
- We analyze the sensitivity of the deposit balance to the interest rate changes by examining the computed deposit balance output.
