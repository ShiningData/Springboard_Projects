import igraph as ig

# Initialize an empty graph
g = ig.Graph()

# Add vertices with names
vertex_names = data_corr.columns.tolist()
g.add_vertices(vertex_names)

# Add edges using vertex names directly
edges = []
threshold = 0.5  # Set a threshold for significant correlations
for i in range(len(data_corr)):
    for j in range(i + 1, len(data_corr)):
        if abs(data_corr.iloc[i, j]) > threshold:
            # Use the names of the vertices directly
            edges.append((vertex_names[i], vertex_names[j]))

# Add the edges
g.add_edges(edges)

# Assign weights to edges
weights = []
for i in range(len(data_corr)):
    for j in range(i + 1, len(data_corr)):
        if abs(data_corr.iloc[i, j]) > threshold:
            weights.append(float(data_corr.iloc[i, j]))

g.es['weight'] = weights
