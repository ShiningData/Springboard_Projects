User
Conduct sensitivity analysisi on interest rate change on deposit balance via Dynamic Time Series Modeling approach in python as stated below:
Model the time series relationship between interest rate changes and deposit balances using techniques like ARIMA (AutoRegressive Integrated Moving Average) or SARIMA (Seasonal ARIMA).
Analyze how deposit balances respond to interest rate shocks over time and estimate the long-term and short-term sensitivity of deposit balances to interest rate changes.
Libraries such as statsmodels and pmdarima offer implementations of ARIMA and SARIMA models in Python.

To conduct sensitivity analysis on the impact of interest rate changes on deposit balances using Dynamic Time Series Modeling in Python, you can use techniques such as ARIMA (AutoRegressive Integrated Moving Average) or SARIMA (Seasonal ARIMA). Here's how you can do it using the statsmodels library:

1. **Load Data**: Load the dataset containing the time series of deposit balances and interest rate changes.

2. **Prepare Data**: Prepare the data by converting it into a time series format and handling any missing values or irregularities.

3. **Model Time Series Relationship**: Use ARIMA or SARIMA models to model the time series relationship between interest rate changes and deposit balances.

4. **Estimate Model Parameters**: Estimate the parameters of the ARIMA or SARIMA model using the dataset.

5. **Forecast Deposit Balances**: Use the fitted model to forecast deposit balances for different interest rate scenarios.

6. **Analyze Sensitivity**: Analyze the forecasted deposit balances to understand how deposit balances respond to interest rate shocks over time and estimate the long-term and short-term sensitivity.

Here's an example of how you can conduct sensitivity analysis using Dynamic Time Series Modeling in Python with the statsmodels library:

```python
import pandas as pd
import matplotlib.pyplot as plt
from statsmodels.tsa.arima.model import ARIMA
from statsmodels.tsa.statespace.sarimax import SARIMAX

# Load dataset (assuming you have a CSV file with time series data)
data = pd.read_csv('time_series_data.csv', parse_dates=['Date'], index_col='Date')

# Prepare data
deposit_balances = data['Deposit_Balance']
interest_rates = data['Interest_Rate']

# Model Time Series Relationship
# Example: Using SARIMA model
model = SARIMAX(deposit_balances, exog=interest_rates, order=(1, 1, 1), seasonal_order=(1, 1, 1, 12))
result = model.fit()

# Forecast Deposit Balances for Different Interest Rate Scenarios
# Example: Forecasting for the next 12 periods with an interest rate increase of 0.25%
forecast_scenario = interest_rates.copy()
forecast_scenario.iloc[-1] += 0.0025  # Increase interest rate by 0.25% for the next period
forecast = result.get_forecast(steps=12, exog=forecast_scenario)

# Plot Forecasted Deposit Balances
plt.figure(figsize=(10, 6))
plt.plot(deposit_balances.index, deposit_balances, label='Actual Deposit Balances')
plt.plot(forecast.index, forecast.predicted_mean, label='Forecasted Deposit Balances')
plt.xlabel('Date')
plt.ylabel('Deposit Balance')
plt.title('Forecasted Deposit Balances with Interest Rate Increase')
plt.legend()
plt.show()

# Analyze Sensitivity
# Example: Calculate the difference between forecasted deposit balances with and without interest rate increase
deposit_balance_difference = forecast.predicted_mean - result.fittedvalues
print("Difference in Forecasted Deposit Balances with Interest Rate Increase:")
print(deposit_balance_difference)
```

In this example:
- We load the dataset containing the time series of deposit balances and interest rate changes.
- We prepare the data by converting it into a time series format and handling any missing values or irregularities.
- We model the time series relationship between interest rate changes and deposit balances using the SARIMA model.
- We forecast deposit balances for different interest rate scenarios, such as an interest rate increase of 0.25% for the next period.
- We plot the forecasted deposit balances to visualize the impact of interest rate changes.
- We analyze the sensitivity by calculating the difference in forecasted deposit balances with and without interest rate increases.

You can adjust the model parameters, forecast horizon, and interest rate scenarios according to your specific requirements for sensitivity analysis.
