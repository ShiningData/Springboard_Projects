import dash
import dash_table
import dash_core_components as dcc
import dash_html_components as html
from dash.dependencies import Input, Output
import pandas as pd

# Assuming df_tran is already defined and preprocessed
df_tran = ...

# Create the Dash app
app = dash.Dash(__name__)

# Define the layout
app.layout = html.Div([
    html.H1("Most Active Segments by Wire Transactions"),

    dcc.Dropdown(
        id='tran_direction_filter',
        options=[{'label': i, 'value': i} for i in df_tran['tran_direction'].unique()],
        placeholder='Transaction Direction',
    ),

    dcc.Dropdown(
        id='frequency_filter',
        options=[{'label': i, 'value': i} for i in df_tran['frequency'].unique()],
        placeholder='Frequency',
    ),

    dash_table.DataTable(
        id='table',
        columns=[
            {'name': 'Segment', 'id': 'segment'},
            {'name': 'Transaction Count', 'id': 'total_tran_count'},
            {'name': 'Transaction Amount', 'id': 'total_tran_amt'},
            {'name': 'Number of Active Clients', 'id': 'num_active_clients'},
        ],
    ),
])

@app.callback(
    Output('table', 'data'),
    [Input('tran_direction_filter', 'value'),
     Input('frequency_filter', 'value')]
)
def update_table(tran_direction, frequency):
    dff = df_tran

    if tran_direction:
        dff = dff[dff['tran_direction'] == tran_direction]
    if frequency:
        dff = dff[dff['frequency'] == frequency]

    # Add the triangles for indicating increase or decrease
    dff['total_tran_count'] = dff.apply(lambda row: str(row['total_tran_count']) + (' ▲' if row['total_tran_count'] > row['pre_total_tran_count'] else ' ▼'), axis=1)
    dff['total_tran_amt'] = dff.apply(lambda row: str(row['total_tran_amt']) + (' ▲' if row['total_tran_amt'] > row['pre_total_tran_amt'] else ' ▼'), axis=1)
    dff['num_active_clients'] = dff.apply(lambda row: str(row['num_active_clients']) + (' ▲' if row['num_active_clients'] > row['pre_num_active_clients'] else ' ▼'), axis=1)

    return dff.to_dict('records')

if __name__ == '__main__':
    app.run_server(debug=True)
