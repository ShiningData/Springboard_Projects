import dash
from dash.dependencies import Input, Output
import dash_table
import pandas as pd

# Sample data
df = pd.DataFrame({
    'Name': ['Alice', 'Bob', 'Charlie'],
    'Age': [28, 22, 35],
    'Salary': [70000, 80000, 90000],
    'Experience': [5, 3, 10],
    'Position': ['Manager', 'Engineer', 'Director'],
    'Department': ['HR', 'IT', 'Admin']
})

app = dash.Dash(__name__)

app.layout = dash.html.Div([
    dash_table.DataTable(
        id='table',
        columns=[{'name': i, 'id': i} for i in df.columns],
        data=df.to_dict('records'),
        sort_action='native',  # Enables sorting on columns
        sort_mode='single'   # Allows single column sorting
    )
])

# Callback to update the sorting of the table
@app.callback(
    Output('table', 'data'),
    Input('table', 'sort_by')
)
def update_table(sort_by):
    if len(sort_by):
        column_name = sort_by[0]['column_id']
        direction = sort_by[0]['direction']
        if direction == 'asc':
            return df.sort_values(column_name, ascending=True).to_dict('records')
        else:
            return df.sort_values(column_name, ascending=False).to_dict('records')
    return df.to_dict('records')

if __name__ == '__main__':
    app.run_server(debug=True)
