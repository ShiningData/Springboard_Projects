import pandas as pd
from sklearn.decomposition import PCA
from sklearn.manifold import TSNE
from sklearn.preprocessing import StandardScaler
import matplotlib.pyplot as plt

# Assuming 'df' is your DataFrame with columns 'RLTN_PWR_ID', 'TRAN_CD', 'VOLUME'
data_pivot = df.pivot_table(index='RLTN_PWR_ID', columns='TRAN_CD', values='VOLUME', fill_value=0)

# Standardizing the data
scaler = StandardScaler()
data_scaled = scaler.fit_transform(data_pivot)

# Applying PCA
pca = PCA(n_components=2)
pca_result = pca.fit_transform(data_scaled)

# Applying t-SNE
tsne = TSNE(n_components=2, learning_rate='auto', init='random')
tsne_result = tsne.fit_transform(data_scaled)

# Plotting the results
fig, ax = plt.subplots(1, 2, figsize=(16, 8))

# PCA Plot
ax[0].scatter(pca_result[:, 0], pca_result[:, 1])
ax[0].set_title('PCA Results')
ax[0].set_xlabel('PCA 1')
ax[0].set_ylabel('PCA 2')

# t-SNE Plot
ax[1].scatter(tsne_result[:, 0], tsne_result[:, 1])
ax[1].set_title('t-SNE Results')
ax[1].set
