import numpy as np
import pandas as pd
from tbats import BATS
from sklearn.model_selection import TimeSeriesSplit
from sklearn.metrics import mean_squared_error

def tbats_cross_val_score(data, n_splits=5, seasonal_periods=None):
    """
    Perform cross-validation for a TBATS model.

    Parameters:
        data (pd.Series): Time series data to be forecasted.
        n_splits (int): Number of cross-validation splits.
        seasonal_periods (int or None): Number of seasonal periods in the data.
            If None, the seasonal period will be automatically detected.

    Returns:
        mean_rmse (float): Mean root mean squared error across cross-validation folds.
    """
    tscv = TimeSeriesSplit(n_splits=n_splits)
    rmse_scores = []

    for train_idx, test_idx in tscv.split(data):
        train_data, test_data = data.iloc[train_idx], data.iloc[test_idx]

        # Fit a TBATS model
        estimator = BATS(seasonal_periods=seasonal_periods)
        model = estimator.fit(train_data)

        # Make predictions
        forecast = model.forecast(steps=len(test_data))

        # Calculate RMSE
        rmse = np.sqrt(mean_squared_error(test_data, forecast))
        rmse_scores.append(rmse)

    mean_rmse = np.mean(rmse_scores)
    return mean_rmse

# Example usage:
# Assuming you have a pandas Series 'time_series_data'
# mean_rmse = tbats_cross_val_score(time_series_data, n_splits=5, seasonal_periods=12)
# print("Mean RMSE:", mean_rmse)
