Conduct sensitivity analysis via Scenario Analysis in python:
Define various scenarios representing different interest rate changes (e.g., increase by 0.25%, decrease by 0.25%, no change).
Apply each scenario to your dataset and observe how deposit balances vary under each scenario.

import pandas as pd

# Load dataset (assuming you have a CSV file with deposit balance and interest rate data)
data = pd.read_csv('deposit_data.csv')

# Define scenarios representing different interest rate changes
scenarios = {
    'No Change': 0,            # No change in interest rate
    'Increase by 0.25%': 0.0025,  # Increase by 0.25%
    'Decrease by 0.25%': -0.0025  # Decrease by 0.25%
}

# Create a copy of the original dataset for each scenario
scenario_data = {scenario: data.copy() for scenario in scenarios}

# Apply each scenario to the dataset and observe how deposit balances vary
for scenario, rate_change in scenarios.items():
    # Apply interest rate change to the 'Interest_Rate' column
    scenario_data[scenario]['Interest_Rate'] += rate_change * scenario_data[scenario]['Interest_Rate']
    # Calculate new deposit balances based on adjusted interest rates
    scenario_data[scenario]['New_Deposit_Balance'] = scenario_data[scenario]['Deposit_Balance'] * \
                                                      (1 + scenario_data[scenario]['Interest_Rate'])

# Print deposit balances under each scenario
for scenario, scenario_df in scenario_data.items():
    print(f"Scenario: {scenario}")
    print(scenario_df[['Deposit_Balance', 'New_Deposit_Balance']])
    print("\n")


Here's how you can conduct sensitivity analysis via scenario analysis in Python using pandas:

python
Copy code
import pandas as pd

# Load dataset (assuming you have a CSV file with deposit balance and interest rate data)
data = pd.read_csv('deposit_data.csv')

# Define scenarios representing different interest rate changes
scenarios = {
    'No Change': 0,            # No change in interest rate
    'Increase by 0.25%': 0.0025,  # Increase by 0.25%
    'Decrease by 0.25%': -0.0025  # Decrease by 0.25%
}

# Create a copy of the original dataset for each scenario
scenario_data = {scenario: data.copy() for scenario in scenarios}

# Apply each scenario to the dataset and observe how deposit balances vary
for scenario, rate_change in scenarios.items():
    # Apply interest rate change to the 'Interest_Rate' column
    scenario_data[scenario]['Interest_Rate'] += rate_change * scenario_data[scenario]['Interest_Rate']
    # Calculate new deposit balances based on adjusted interest rates
    scenario_data[scenario]['New_Deposit_Balance'] = scenario_data[scenario]['Deposit_Balance'] * \
                                                      (1 + scenario_data[scenario]['Interest_Rate'])

# Print deposit balances under each scenario
for scenario, scenario_df in scenario_data.items():
    print(f"Scenario: {scenario}")
    print(scenario_df[['Deposit_Balance', 'New_Deposit_Balance']])
    print("\n")
In this script:

We load the dataset containing deposit balance and interest rate data.
We define scenarios representing different interest rate changes, including no change, increase by 0.25%, and decrease by 0.25%.
We create a copy of the original dataset for each scenario.
We apply each scenario to the dataset by adjusting the interest rates accordingly.
We calculate the new deposit balances based on the adjusted interest rates.
Finally, we print the deposit balances under each scenario to observe how they vary.
This scenario analysis allows us to assess how changes in interest rates affect deposit balances under different scenarios, providing insights into the sensitivity of deposit balances to interest rate changes.





