import plotly.graph_objects as go
import plotly.express as px
import pandas as pd
import numpy as np
from jupyter_dash import JupyterDash
from IPython.display import display, HTML
from dash.dependencies import Input, Output, State
import dash_html_components as html
import dash_core_components as dcc

# Use this line in Jupyter Notebook to display plots inline
%matplotlib inline

# Assuming df is your DataFrame and it has the structure described
df['tran_dt'] = pd.to_datetime(df['tran_dt'])

start_date = '2022-02-15'
end_date = '2023-05-15'

mask = (df['tran_dt'] >= start_date) & (df['tran_dt'] <= end_date)
filtered_df = df.loc[mask, :]

fig = go.Figure()

fig.add_trace(go.Scatter(
    x=filtered_df['tran_dt'], 
    y=filtered_df['total_inflow_tran_amt']/1e6, 
    fill='tozeroy', 
    fillcolor='rgba(0,128,0,0.5)',
    line_color='rgba(255,255,255,0)', 
    name='Inflow'
))

fig.add_trace(go.Scatter(
    x=filtered_df['tran_dt'], 
    y=-filtered_df['total_outflow_tran_amt']/1e6, 
    fill='tozeroy', 
    fillcolor='rgba(255,0,0,0.5)',
    line_color='rgba(255,255,255,0)', 
    name='Outflow'
))

# Add difference lines with different colors based on sign
for i in range(1, len(filtered_df)):
    fig.add_trace(go.Scatter(
        x=[filtered_df['tran_dt'].iloc[i-1], filtered_df['tran_dt'].iloc[i]], 
        y=[filtered_df['diff_inflow_outflow_amt'].iloc[i-1]/1e6, filtered_df['diff_inflow_outflow_amt'].iloc[i]/1e6], 
        mode='lines', 
        line=dict(color='green' if filtered_df['diff_inflow_outflow_amt'].iloc[i-1] >= 0 else 'red', width=2),
        showlegend=False
    ))

fig.update_layout(
    title="Inflow vs Outflow Trend ($ in Millions)",
    xaxis=dict(title='Date'),
    yaxis=dict(title='$ in Millions'),
    showlegend=True
)

fig.show()
